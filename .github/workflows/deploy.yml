name: Build and Deploy to ECS

on:
  push:
    branches:
      - main

env:
  AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
  ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
  IAM_ROLE: ${{ vars.IAM_ROLE }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
        with:
          role-to-assume: ${{ env.IAM_ROLE }}
          role-session-name: GitHubActionsSession
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Install CDK CLI
        run: |
          npm install -g aws-cdk

      - name: Bootstrap CDK Environment
        run: |
        cdk bootstrap aws://181945851404/${{ env.AWS_DEFAULT_REGION }} \
          --require-approval never

      - name: Install Dependencies for Infrastructure
        run: |
        cd infra
        npm install

      # Deploy the CDK Stack
      - name: Deploy CDK Stack
        run: |
          cd infra
          cdk deploy --require-approval never
